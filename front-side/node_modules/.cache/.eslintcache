[{"/Users/aimen/real-time-stuff/front-side/src/index.js":"1","/Users/aimen/real-time-stuff/front-side/src/App.js":"2","/Users/aimen/real-time-stuff/front-side/src/reportWebVitals.js":"3","/Users/aimen/real-time-stuff/front-side/src/global.js":"4","/Users/aimen/real-time-stuff/front-side/src/component/chatView.js":"5","/Users/aimen/real-time-stuff/front-side/src/component/sideBar.js":"6","/Users/aimen/real-time-stuff/front-side/src/component/MessageBubble.js":"7"},{"size":495,"mtime":1651867350474,"results":"8","hashOfConfig":"9"},{"size":645,"mtime":1652807116353,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1651147311754,"results":"11","hashOfConfig":"9"},{"size":125,"mtime":1651148963177,"results":"12","hashOfConfig":"9"},{"size":2178,"mtime":1652807285829,"results":"13","hashOfConfig":"9"},{"size":4076,"mtime":1652410875299,"results":"14","hashOfConfig":"9"},{"size":307,"mtime":1651335751814,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1u6o2j7",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"19"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"/Users/aimen/real-time-stuff/front-side/src/index.js",[],[],[],"/Users/aimen/real-time-stuff/front-side/src/App.js",[],[],[],"/Users/aimen/real-time-stuff/front-side/src/reportWebVitals.js",[],[],"/Users/aimen/real-time-stuff/front-side/src/global.js",[],[],"/Users/aimen/real-time-stuff/front-side/src/component/chatView.js",[],[],"/Users/aimen/real-time-stuff/front-side/src/component/sideBar.js",["40","41"],[],"import React,{useState, useEffect, useRef}from 'react';\nimport './sideBar.css';\nimport img from '../img.png';\nimport socket from '../global';\n\nimport { motion, AnimatePresence } from \"framer-motion\";\n\n\nfunction SideBar() {\n    const messagesEndRef = useRef(null);\n    const [isVisible, setVisible] = useState(true);\n    const[userCount, setUserCount] = useState(0);\n    const[usersConntected, setUsersConntected] = useState([]);\n    let initialState = null;\n\n    useEffect(() => {\n        usersCount();\n        scrollToBottom();\n    }, []);\n\n    useEffect(() => {\n        scrollToBottom();\n        connectUser();\n    }, []);\n\n    useEffect(() => {\n        scrollToBottom();\n        disconnectedUser();\n        \n    }, []);\n\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n      }\n    \n    function connectUser() {\n        socket.on(\"sendUser2\", (user) => {\n            initialState = user;\n            setUsersConntected((val) => [...val, initialState + \" has conneted\"]);\n        },[initialState]);\n         setVisible(false);\n         timeout(1000);\n         setVisible(true);\n    }\n\n    function disconnectedUser(){\n        socket.on(\"disconnectedUser\", (user) => {\n            setUsersConntected((val) => [...val, user + \" has DisConnected\"]);\n            initialState = user;\n        \n            });\n    }\n\n    function usersCount(){\n        socket.on(\"sendUserCount\", (value) => {\n            setUserCount(value);\n            //setVisible(!isVisible);\n         });\n         console.log('i fire once');\n    }\n    \n    const AlwaysScrollToBottom = () => {\n        const elementRef = useRef();\n        useEffect(() => elementRef.current.scrollIntoView({ behavior: \"smooth\" }));\n        return <div ref={elementRef} />;\n      };\n\n    function timeout(number) {\n        return new Promise( res => setTimeout(res, number));\n    }\n    \n\n    return (\n        <div className='sidebar'>\n                <div className=\"img-container\">\n                    <img src={img} alt='img' className='img'/>\n                    <p>big</p>\n                 </div>\n\n                 <div className='pressence-container'>{userCount === null ? 0 : userCount} Users Connected</div>\n                <AnimatePresence>\n                    {isVisible && (\n                        <motion.div\n                        onTap={() => setVisible(!isVisible)}\n                            style={{\n                            width: 40,\n                            height: 40,\n                            borderRadius: 15,\n                            backgroundColor: \"#fff\"\n                            }}\n                            initial={{ opacity: 0, scale: 0.75 }}\n                            animate={{ opacity: 1, scale: 1 }}\n                            exit={{ opacity: 0, scale: 0 }}\n                        />\n                    )}\n                </AnimatePresence>\n\n                <div className='notification-container'>\n                    <p>Notifcations</p>\n                    {usersConntected === null ? <div/> : \n                    usersConntected.map((index) => (index.includes('DisConnected') ?\n                        <div\n                        style={{\n                        borderRadius: '5px',\n                        marginTop: \"10px\",\n                        backgroundColor: \"#f28787\",\n                        color:\"#fff\"\n                        }}\n                        >{index}</div>\n                        :\n                        <div\n                        style={{\n                        borderRadius: '5px',\n                        marginTop: \"10px\",\n                        backgroundColor: \"#fff\",\n                        boxShadow:\t\"0 0.125rem 0.5rem rgba(0, 0, 0, .05), 0 0.0625rem 0.125rem rgba(0, 0, 0, .2)\",\n                        color:\"#0eac28\",\n                        }}\n                        >{index}</div>\n\n                    ))\n                    }\n                    <AlwaysScrollToBottom />\n                </div>\n            \n        </div>\n    );\n}\n\nexport default SideBar;","/Users/aimen/real-time-stuff/front-side/src/component/MessageBubble.js",[],[],{"ruleId":"42","severity":1,"message":"43","line":24,"column":8,"nodeType":"44","endLine":24,"endColumn":10,"suggestions":"45"},{"ruleId":"42","severity":1,"message":"46","line":30,"column":8,"nodeType":"44","endLine":30,"endColumn":10,"suggestions":"47"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'connectUser'. Either include it or remove the dependency array.","ArrayExpression",["48"],"React Hook useEffect has a missing dependency: 'disconnectedUser'. Either include it or remove the dependency array.",["49"],{"desc":"50","fix":"51"},{"desc":"52","fix":"53"},"Update the dependencies array to be: [connectUser]",{"range":"54","text":"55"},"Update the dependencies array to be: [disconnectedUser]",{"range":"56","text":"57"},[620,622],"[connectUser]",[718,720],"[disconnectedUser]"]