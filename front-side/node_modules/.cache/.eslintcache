[{"/Users/aimen/real-time-stuff/front-side/src/index.js":"1","/Users/aimen/real-time-stuff/front-side/src/App.js":"2","/Users/aimen/real-time-stuff/front-side/src/reportWebVitals.js":"3","/Users/aimen/real-time-stuff/front-side/src/global.js":"4","/Users/aimen/real-time-stuff/front-side/src/component/chatView.js":"5","/Users/aimen/real-time-stuff/front-side/src/component/sideBar.js":"6","/Users/aimen/real-time-stuff/front-side/src/component/MessageBubble.js":"7"},{"size":535,"mtime":1651147311753,"results":"8","hashOfConfig":"9"},{"size":929,"mtime":1651332643494,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1651147311754,"results":"11","hashOfConfig":"9"},{"size":125,"mtime":1651148963177,"results":"12","hashOfConfig":"9"},{"size":2018,"mtime":1651335413122,"results":"13","hashOfConfig":"9"},{"size":3284,"mtime":1651337169356,"results":"14","hashOfConfig":"9"},{"size":307,"mtime":1651335751814,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u6o2j7",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/aimen/real-time-stuff/front-side/src/index.js",[],[],"/Users/aimen/real-time-stuff/front-side/src/App.js",["41","42","43","44","45"],[],"import React from \"react\";\nimport './App.css';\n\nimport socket from './global'\n\nimport SideBar from './component/sideBar';\nimport ChatView from \"./component/chatView\";\n\n\nfunction App() {\n  const [data, setData] = React.useState([]);\n  const [newData, setNewData] = React.useState([]);\n  \n  let array = [];\n  React.useEffect(() => {\n\n    socket.on('history', (messages) => setData(messages) );\n    console.log(data);\n    data.map(index => {\n      console.log(index.quotes);\n    });\n\n    window.addEventListener('unload', handleTabClosing)\n    \n  }, []);\n\n  \n  const handleTabClosing = () => {\n    var huil = 0;\n    console.log(\"hbhjbj\");\n    socket.emit('sendUserCount', huil);\n    socket.emit('terminate');\n    socket.close();\n  }\n\n  \n  return (\n    <div className=\"App\">\n      <div className=\"app-container\">\n      <SideBar></SideBar>\n      <ChatView chat={data}></ChatView>\n      </div>\n    </div>\n  );\n\n}\n\nexport default App;\n\n","/Users/aimen/real-time-stuff/front-side/src/reportWebVitals.js",[],[],"/Users/aimen/real-time-stuff/front-side/src/global.js",[],[],"/Users/aimen/real-time-stuff/front-side/src/component/chatView.js",["46","47","48"],[],"import { render } from '@testing-library/react';\nimport React,{useState, useEffect}from 'react';\n\nimport socket from '../global';\nimport './chatView.css';\n\nimport MessageBubble from './MessageBubble'\n\n\n\nfunction ChatView({chat}){\n    const[data, setData] = useState([]);\n    const[inputVal, setInputVal] = useState(\"\");\n    const[cmessage, setcMessage] = useState([]);\n    const[usersConntected, setUsersConntected] = useState([]);\n\n   useEffect(() => {\n\n    socket.on('history', (messages) => setData(messages) );\n   reciveingMessage();\n   }, []);\n\n   useEffect(() => {\n    setData((val) => [...val, cmessage]);\n   }, [cmessage]);\n\n   function reciveingUser(){\n    socket.on(\"sendUser\", (user) => {\n        console.log(user);\n        setUsersConntected(user);\n    });\n   }\n\n   function reciveingMessage(){\n    socket.on('message',  (message) => {\n      setcMessage(message[0]);\n    });\n   }\n\n  function handleSubmit(e) {\n    e.preventDefault(); \n      socket.emit(\"sendMessage\", inputVal);\n    \n  }\n\n    return(\n        <div className='chatview'>\n            <div className='chat-screen'>\n                {data.map((val) => (\n                    <MessageBubble key={val._id}  message={val.quotes} user={val.user} />\n                    ))}\n                \n            </div>\n\n        <form >\n            <div className='form-container'>\n                <div className=\"input-container\">\n                    <input \n                       \n                        onChange={(evt) => { setInputVal(evt.target.value) }}\n                        type=\"text\"\n                        name='quotes' \n                        placeholder=\"type your message...\">\n                    </input>\n                \n                </div>\n                <div className='button-container'>\n                <button type='submit' onClick={(e) => handleSubmit(e)}>Submit</button>\n                   \n                </div>\n            </div>\n        </form>\n            \n           \n        </div>\n    );\n    \n}\n\nexport default ChatView;",[],"/Users/aimen/real-time-stuff/front-side/src/component/sideBar.js",["49","50","51","52","53"],[],"import React,{useState, useEffect}from 'react';\nimport './sideBar.css';\nimport img from '../img.png';\nimport socket from '../global';\n\nimport { motion, AnimatePresence } from \"framer-motion\";\n\n\nfunction SideBar() {\n    const [isVisible, setVisible] = useState(true);\n    const[userCount, setUserCount] = useState(0);\n    const[usersConntected, setUsersConntected] = useState([]);\n    const[usersDisConntected, setUsersDisConntected] = useState([]);\n    let initialState = null;\n    let array = [];\n\n    useEffect(() => {\n        socket.on(\"sendUserCount\", (value) => {\n            setUserCount(value);\n            setVisible(!isVisible);\n        });\n        socket.on(\"sendUser\", (user) => {\n            initialState = user;\n            console.log(user);\n            setUsersConntected(initialState);\n        });\n        usersConntected.map((user) => {\n               array.push(user + \"has conneted\");\n               \n            });\n            console.log(array);\n    });\n\n    useEffect(() => {\n        socket.on(\"disconnectedUser\", (user) => {\n            initialState = user;\n            console.log(user);\n            setUsersDisConntected(initialState);\n            });\n            usersDisConntected.map((user) => {\n                array.push(user + \"has Disconneted\");\n                \n             });\n    }, );\n\n\n    function timeout(number) {\n        return new Promise( res => setTimeout(res, number));\n    }\n    \n\n    return (\n        <div className='sidebar'>\n                <div className=\"img-container\">\n                    <img src={img} alt='img' className='img'/>\n                    <p>big</p>\n                 </div>\n\n                 <div className='pressence-container'>{userCount === null ? 0 : userCount} Users Connected</div>\n                 <motion.div\n                    style={{\n                    width: 75,\n                    height: 75,\n                    borderRadius: 30,\n                    backgroundColor: \"rgba(255,255,255,0.5)\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    cursor: \"pointer\"\n                    }}\n                    onTap={() => setVisible(!isVisible)}\n                >\n                <AnimatePresence>\n                    {isVisible && (\n                        <motion.div\n                            style={{\n                            width: 40,\n                            height: 40,\n                            borderRadius: 15,\n                            backgroundColor: \"#fff\"\n                            }}\n                            initial={{ opacity: 0, scale: 0.75 }}\n                            animate={{ opacity: 1, scale: 1 }}\n                            exit={{ opacity: 0, scale: 0 }}\n                        />\n                    )}\n                </AnimatePresence>\n                </motion.div>\n\n                <div className='notification-container'>\n                    <p>Notifcations</p>\n                    {usersConntected === null ? <div/> : \n                    usersConntected.map((index) => (\n                        <p>{index}</p>\n                    ))\n                    } has Connected\n                </div>\n            \n        </div>\n    );\n}\n\nexport default SideBar;","/Users/aimen/real-time-stuff/front-side/src/component/MessageBubble.js",[],[],{"ruleId":"54","severity":1,"message":"55","line":12,"column":10,"nodeType":"56","messageId":"57","endLine":12,"endColumn":17},{"ruleId":"54","severity":1,"message":"58","line":12,"column":19,"nodeType":"56","messageId":"57","endLine":12,"endColumn":29},{"ruleId":"54","severity":1,"message":"59","line":14,"column":7,"nodeType":"56","messageId":"57","endLine":14,"endColumn":12},{"ruleId":"60","severity":1,"message":"61","line":19,"column":20,"nodeType":"62","messageId":"63","endLine":19,"endColumn":22},{"ruleId":"64","severity":1,"message":"65","line":25,"column":6,"nodeType":"66","endLine":25,"endColumn":8,"suggestions":"67"},{"ruleId":"54","severity":1,"message":"68","line":1,"column":10,"nodeType":"56","messageId":"57","endLine":1,"endColumn":16},{"ruleId":"54","severity":1,"message":"69","line":15,"column":11,"nodeType":"56","messageId":"57","endLine":15,"endColumn":26},{"ruleId":"54","severity":1,"message":"70","line":27,"column":13,"nodeType":"56","messageId":"57","endLine":27,"endColumn":26},{"ruleId":"64","severity":1,"message":"71","line":23,"column":28,"nodeType":"56","endLine":23,"endColumn":32},{"ruleId":"60","severity":1,"message":"61","line":27,"column":36,"nodeType":"62","messageId":"63","endLine":27,"endColumn":38},{"ruleId":"64","severity":1,"message":"71","line":36,"column":28,"nodeType":"56","endLine":36,"endColumn":32},{"ruleId":"60","severity":1,"message":"61","line":40,"column":43,"nodeType":"62","messageId":"63","endLine":40,"endColumn":45},{"ruleId":"54","severity":1,"message":"72","line":47,"column":14,"nodeType":"56","messageId":"57","endLine":47,"endColumn":21},"no-unused-vars","'newData' is assigned a value but never used.","Identifier","unusedVar","'setNewData' is assigned a value but never used.","'array' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["73"],"'render' is defined but never used.","'usersConntected' is assigned a value but never used.","'reciveingUser' is defined but never used.","Assignments to the 'initialState' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'timeout' is defined but never used.",{"desc":"74","fix":"75"},"Update the dependencies array to be: [data]",{"range":"76","text":"77"},[547,549],"[data]"]