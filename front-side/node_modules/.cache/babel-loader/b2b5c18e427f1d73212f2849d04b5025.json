{"ast":null,"code":"var _jsxFileName = \"/Users/aimen/real-time-stuff/front-side/src/component/chatView.js\",\n    _s = $RefreshSig$();\n\nimport { render } from '@testing-library/react';\nimport React, { useState, useEffect } from 'react';\nimport socket from '../global';\nimport './chatView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChatView(_ref) {\n  _s();\n\n  let {\n    chat\n  } = _ref;\n  const [data, setData] = useState([]);\n  const [inputVal, setInputVal] = useState(\"\");\n  const [cmessage, setcMessage] = useState([]);\n  const [usersConntected, setUsersConntected] = useState([]);\n  useEffect(() => {\n    socket.on('history', messages => setData(messages));\n    reciveingMessage();\n  }, []);\n  useEffect(() => {\n    setData(val => [...val, cmessage]);\n  }, [cmessage]);\n\n  function reciveingUser() {\n    socket.on(\"sendUser\", user => {\n      console.log(user);\n      setUsersConntected(user);\n    });\n  }\n\n  function reciveingMessage() {\n    socket.on('message', message => {\n      setcMessage(message[0]);\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    socket.emit(\"sendMessage\", inputVal);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatview\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-screen\",\n      children: data.map(val => /*#__PURE__*/_jsxDEV(MessageBubble, {\n        message: val.quotes,\n        user: val.user\n      }, val._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: evt => {\n              setInputVal(evt.target.value);\n            },\n            type: \"text\",\n            name: \"quotes\",\n            placeholder: \"type your message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: e => handleSubmit(e),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatView, \"DhbZwoFLbgb6bDATOQRx6kz03pw=\");\n\n_c = ChatView;\nexport default ChatView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatView\");","map":{"version":3,"sources":["/Users/aimen/real-time-stuff/front-side/src/component/chatView.js"],"names":["render","React","useState","useEffect","socket","ChatView","chat","data","setData","inputVal","setInputVal","cmessage","setcMessage","usersConntected","setUsersConntected","on","messages","reciveingMessage","val","reciveingUser","user","console","log","message","handleSubmit","e","preventDefault","emit","map","quotes","_id","evt","target","value"],"mappings":"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","sourcesContent":["import { render } from '@testing-library/react';\nimport React,{useState, useEffect}from 'react';\n\nimport socket from '../global';\nimport './chatView.css';\n\n\n\nfunction ChatView({chat}){\n    const[data, setData] = useState([]);\n    const[inputVal, setInputVal] = useState(\"\");\n    const[cmessage, setcMessage] = useState([]);\n    const[usersConntected, setUsersConntected] = useState([]);\n\n   useEffect(() => {\n\n    socket.on('history', (messages) => setData(messages) );\n   reciveingMessage();\n   }, []);\n\n   useEffect(() => {\n    setData((val) => [...val, cmessage]);\n   }, [cmessage]);\n\n   function reciveingUser(){\n    socket.on(\"sendUser\", (user) => {\n        console.log(user);\n        setUsersConntected(user);\n    });\n   }\n\n   function reciveingMessage(){\n    socket.on('message',  (message) => {\n      setcMessage(message[0]);\n    });\n   }\n\n  function handleSubmit(e) {\n    e.preventDefault(); \n      socket.emit(\"sendMessage\", inputVal);\n    \n  }\n\n    return(\n        <div className='chatview'>\n            <div className='chat-screen'>\n                {data.map((val) => (\n                    <MessageBubble key={val._id}  message={val.quotes} user={val.user} />\n                    ))}\n                \n            </div>\n\n        <form >\n            <div className='form-container'>\n                <div className=\"input-container\">\n                    <input \n                       \n                        onChange={(evt) => { setInputVal(evt.target.value) }}\n                        type=\"text\"\n                        name='quotes' \n                        placeholder=\"type your message...\">\n                    </input>\n                \n                </div>\n                <div className='button-container'>\n                <button type='submit' onClick={(e) => handleSubmit(e)}>Submit</button>\n                   \n                </div>\n            </div>\n        </form>\n            \n           \n        </div>\n    );\n    \n}\n\nexport default ChatView;"]},"metadata":{},"sourceType":"module"}