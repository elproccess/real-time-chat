{"ast":null,"code":"var _jsxFileName = \"/Users/aimen/real-time-stuff/front-side/src/component/chatView.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport socket from '../global';\nimport './chatView.css';\nimport MessageBubble from './MessageBubble';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChatView() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const messagesEndRef = useRef(null);\n  const [data, setData] = useState([]);\n  const [inputVal, setInputVal] = useState(\"\");\n  const [cmessage, setcMessage] = useState([]);\n  useEffect(() => {\n    socket.on('history', messages => setData(messages));\n    reciveingMessage();\n    scrollToBottom();\n  }, []);\n  useEffect(() => {\n    setData(val => [...val, cmessage]);\n    scrollToBottom();\n  }, [cmessage]);\n\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  function reciveingMessage() {\n    socket.on('message', message => {\n      setcMessage(message[0]);\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    socket.emit(\"sendMessage\", inputVal);\n  }\n\n  const AlwaysScrollToBottom = () => {\n    _s();\n\n    const elementRef = useRef();\n    useEffect(() => elementRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    }));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: elementRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  };\n\n  _s(AlwaysScrollToBottom, \"CKe/C9l/PZDcdMrjDfTWxieUegY=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatview\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-screen\",\n      children: [data.map(val => /*#__PURE__*/_jsxDEV(MessageBubble, {\n        message: val.quotes,\n        user: val.user\n      }, val._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(AlwaysScrollToBottom, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: evt => {\n              setInputVal(evt.target.value);\n            },\n            type: \"text\",\n            name: \"quotes\",\n            placeholder: \"type your message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: e => handleSubmit(e),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(ChatView, \"JLQp+7TUHyh2nVe4LLTlRh4CBVQ=\");\n\n_c = ChatView;\nexport default ChatView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatView\");","map":{"version":3,"sources":["/Users/aimen/real-time-stuff/front-side/src/component/chatView.js"],"names":["React","useState","useEffect","useRef","socket","MessageBubble","ChatView","messagesEndRef","data","setData","inputVal","setInputVal","cmessage","setcMessage","on","messages","reciveingMessage","scrollToBottom","val","current","scrollIntoView","behavior","message","handleSubmit","e","preventDefault","emit","AlwaysScrollToBottom","elementRef","map","quotes","user","_id","evt","target","value"],"mappings":"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","sourcesContent":["import React,{useState, useEffect, useRef}from 'react';\n\nimport socket from '../global';\nimport './chatView.css';\n\nimport MessageBubble from './MessageBubble'\n\n\n\nfunction ChatView(){\n    const messagesEndRef = useRef(null); \n    const[data, setData] = useState([]);\n    const[inputVal, setInputVal] = useState(\"\");\n    const[cmessage, setcMessage] = useState([]);\n\n   useEffect(() => {\n    socket.on('history', (messages) => setData(messages) );\n   reciveingMessage();\n   scrollToBottom();\n   }, []);\n\n   useEffect(() => {\n    setData((val) => [...val, cmessage]);\n    scrollToBottom();\n   }, [cmessage]);\n\n   const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n  }\n\n   function reciveingMessage(){\n    socket.on('message',  (message) => {\n      setcMessage(message[0]);\n    });\n   }\n\n  function handleSubmit(e) {\n    e.preventDefault(); \n      socket.emit(\"sendMessage\", inputVal);\n    \n  }\n\n  const AlwaysScrollToBottom = () => {\n    const elementRef = useRef();\n    useEffect(() => elementRef.current.scrollIntoView({ behavior: \"smooth\" }));\n    return <div ref={elementRef} />;\n  };\n\n    return(\n        <div className='chatview'>\n            <div className='chat-screen'>\n                {data.map((val) => (\n                    <MessageBubble  key={val._id}  message={val.quotes} user={val.user} />\n                    ))}\n                    <AlwaysScrollToBottom/>\n            </div>\n        <form >\n            <div className='form-container'>\n                <div className=\"input-container\">\n                    <input \n                       \n                        onChange={(evt) => { setInputVal(evt.target.value) }}\n                        type=\"text\"\n                        name='quotes' \n                        placeholder=\"type your message...\">\n                    </input>\n                \n                </div>\n                <div className='button-container'>\n                <button type='submit' onClick={(e) => handleSubmit(e)}>Submit</button>\n                   \n                </div>\n            </div>\n        </form>\n            \n           \n        </div>\n    );\n    \n}\n\nexport default ChatView;"]},"metadata":{},"sourceType":"module"}